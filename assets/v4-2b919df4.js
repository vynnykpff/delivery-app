const U=(n,t,d)=>new Intl.NumberFormat(n,t).format(d);let r;const i=new Uint8Array(16);function m(){if(!r&&(r=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(i)}const e=[];for(let n=0;n<256;++n)e.push((n+256).toString(16).slice(1));function p(n,t=0){return(e[n[t+0]]+e[n[t+1]]+e[n[t+2]]+e[n[t+3]]+"-"+e[n[t+4]]+e[n[t+5]]+"-"+e[n[t+6]]+e[n[t+7]]+"-"+e[n[t+8]]+e[n[t+9]]+"-"+e[n[t+10]]+e[n[t+11]]+e[n[t+12]]+e[n[t+13]]+e[n[t+14]]+e[n[t+15]]).toLowerCase()}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),c={randomUUID:y};function a(n,t,d){if(c.randomUUID&&!t&&!n)return c.randomUUID();n=n||{};const u=n.random||(n.rng||m)();if(u[6]=u[6]&15|64,u[8]=u[8]&63|128,t){d=d||0;for(let o=0;o<16;++o)t[d+o]=u[o];return t}return p(u)}export{U as N,a as v};
